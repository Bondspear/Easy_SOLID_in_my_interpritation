<?php 
//------------------------------------SRP-----------------------------------------------------------//
// Принцип единой ответственности,говорит о том,что лучше зделать один класс,отвечающий за что то одно
// чем зделать один класс,отвечающий за много процесов 
//---------------------------------------------------------------------------------------------------//


//--------------------------В чём смысл этого принципа?----------------------------------------------//
// Когда произойдёт ошибка,оброботчик ошибок укажет нам на класс,что "сломался и больше не роботает" 
// а если в этом классе есть много ответственностей (скажем 1000) то поиск и устранение ошибок станет
// практичесски невозможным,а если у класса есть только одна ответственность-то сразу станет понятно 
// что именно не работает и ошибка будет устранена максимально быстро 
//---------------------------------------------------------------------------------------------------//


//----------------------Как я понимаю понятие "Ответственность"--------------------------------------//
// Единая Ответственность - это Единая логика работы всех сущностей внутри класса 
// или проще:все заняты одним делом ,
// или ещё проще:если наш код -это дом,который мы строим ,то логично,что наши строители (классы)
// отвечают только за свою специализацию - кровельщики собирают крышу,бетонщики заливают фундамент
// каменьщики поднимают стены,електрики врезают в стены провода и так далее - и согласитесь что лучше
// чтобы мастера в своей области и занимались этой областью,а теперь перенесёмся обратно в программирование
// и получаем ошибку (телевизор не включается - ошибка класса Електрик) - ну мол нет електричества
// с кого спрашиваем? - с електрика! ,класс Електрик имеет единую ответственность - связанную с тем
// (чтобы в доме были проведены все розетки,чтобы стояли счётчики,чтобы електричество было подключено) 
// одним словом електрик отвечает за это и никак и нигде не связан с бетонщиком,с каменьщиком и т.д.


//-------------------------------------Живой пример--------------------------------------------------//
// я собираю код,который проверяет дату и в зависимости от даты присылает сообщения в виде           
// напоминаний и сообщения в виде поздравлений -- а теперь внимание если у ОДНОГО класса по SRP ОДНА 
// ответственность,то сколько же мне нужно классов для моего кода?(сколько строителей специалистов,чтоб построить мой дом?)
// если класс отвечает за роботу с датой  - это специалист по дате 
// если класс отвечает за отправку мне сообщений - то это специалист по сообщениям: и того 2 (класса)
// но кто отправляет?? специалист по отправке!
// Давайте строить или как я говорю Собирать наш код!
//---------------------------------------------------------------------------------------------------//













